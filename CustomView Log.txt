// --------------------------------------------------------------------------------------------- //
// ------------------------------ When drawn the first time ------------------------------------ //
// --------------------------------------------------------------------------------------------- //

initiation
onFinishInflate
setLayoutParams
getLayoutDirection
requestLayout
hasFocus
getLayoutParams
getId
hasTransientState
getVisibility
getLayoutDirection
getLayoutDirection
canResolveLayoutDirection
getLayoutDirection
canResolveTextDirection
isLayoutDirectionResolved
isLayoutDirectionResolved
getLayoutDirection
getLayoutDirection
onRtlPropertiesChanged
isLayoutDirectionResolved
isTextDirectionResolved
isTextAlignmentResolved
getLayoutDirection
onRtlPropertiesChanged
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
getVisibility
onAttachedToWindow
jumpDrawablesToCurrentState
isFocused
onWindowVisibilityChanged
isShown
onVisibilityAggregated
getAutofillType
getAccessibilityPaneTitle
onVisibilityChanged
refreshDrawableState
drawableStateChanged
onCreateDrawableState
isFocused
hasWindowFocus
getAutofillType
getLayoutDirection
isLayoutRequested
getLayoutParams
getLayoutParams
getLayoutParams
getVisibility
getLayoutParams
getVisibility
getLayoutParams
getVisibility
onMeasure
getSuggestedMinimumWidth
getSuggestedMinimumHeight
getVisibility
getLayoutParams
getVisibility
onMeasure
getSuggestedMinimumWidth
getSuggestedMinimumHeight
getLayoutParams
getVisibility
layout
isOpaque
onSizeChanged
isLaidOut
isOpaque
onLayout
isLaidOut
isFocused
dispatchWindowFocusChanged
onWindowFocusChanged
refreshDrawableState
drawableStateChanged
onCreateDrawableState
isFocused
hasWindowFocus
getLayerType
getLayerType
computeScroll
draw
onDraw
dispatchDraw
onDrawForeground
hasOverlappingRendering

// --------------------------------------------------------------------------------------------- //
// ---------------------------- when the activity rotated -------------------------------------- //
// --------------------------------------------------------------------------------------------- //

onCancelPendingInputEvents
cancelLongPress
dispatchSaveInstanceState
onSaveInstanceState
onWindowVisibilityChanged
isShown
onVisibilityAggregated
invalidateDrawable
verifyDrawable
invalidate
getAutofillType
getAccessibilityPaneTitle
onDetachedFromWindow
stopNestedScroll
jumpDrawablesToCurrentState
destroyDrawingCache
getAutofillType
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
initiation
onFinishInflate
setLayoutParams
getLayoutDirection
requestLayout
hasFocus
getLayoutParams
getId
hasTransientState
getVisibility
getLayoutDirection
dispatchRestoreInstanceState
onRestoreInstanceState
getLayoutDirection
canResolveLayoutDirection
getLayoutDirection
canResolveTextDirection
isLayoutDirectionResolved
isLayoutDirectionResolved
getLayoutDirection
getLayoutDirection
onRtlPropertiesChanged
isLayoutDirectionResolved
isTextDirectionResolved
isTextAlignmentResolved
getLayoutDirection
onRtlPropertiesChanged
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
getVisibility
onAttachedToWindow
jumpDrawablesToCurrentState
isFocused
onWindowVisibilityChanged
isShown
onVisibilityAggregated
getAutofillType
getAccessibilityPaneTitle
onVisibilityChanged
refreshDrawableState
drawableStateChanged
onCreateDrawableState
isFocused
hasWindowFocus
getAutofillType
getLayoutDirection
isLayoutRequested
getLayoutParams
getLayoutParams
getLayoutParams
getVisibility
getLayoutParams
getVisibility
getLayoutParams
getVisibility
onMeasure
getSuggestedMinimumWidth
getSuggestedMinimumHeight
getVisibility
getLayoutParams
getVisibility
onMeasure
getSuggestedMinimumWidth
getSuggestedMinimumHeight
getLayoutParams
getVisibility
layout
isOpaque
onSizeChanged
isLaidOut
isOpaque
onLayout
isLaidOut
isFocused
dispatchWindowFocusChanged
onWindowFocusChanged
refreshDrawableState
drawableStateChanged
onCreateDrawableState
isFocused
hasWindowFocus
getLayerType
getLayerType
computeScroll
draw
onDraw
dispatchDraw
onDrawForeground
hasOverlappingRendering

// --------------------------------------------------------------------------------------------- //
// --------------- When the activity destroyed (back button pressed) --------------------------- //
// --------------------------------------------------------------------------------------------- //

dispatchWindowFocusChanged
onWindowFocusChanged
isPressed
isPressed
refreshDrawableState
drawableStateChanged
onCreateDrawableState
isFocused
hasWindowFocus
dispatchWindowVisibilityChanged
onWindowVisibilityChanged
getVisibility
getVisibility
onVisibilityAggregated
invalidateDrawable
verifyDrawable
invalidate
getAutofillType
getAccessibilityPaneTitle
onCancelPendingInputEvents
cancelLongPress
dispatchVisibilityChanged
onVisibilityChanged
onDetachedFromWindow
stopNestedScroll
jumpDrawablesToCurrentState
destroyDrawingCache
getAutofillType
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState
jumpDrawablesToCurrentState

// --------------------------------------------------------------------------------------------- //
// ------------------------------- When the view is touched ------------------------------------ //
// --------------------------------------------------------------------------------------------- //

getZ
getElevation
getTranslationZ
dispatchTouchEvent
stopNestedScroll
onFilterTouchEventForSecurity
onTouchEvent
stopNestedScroll